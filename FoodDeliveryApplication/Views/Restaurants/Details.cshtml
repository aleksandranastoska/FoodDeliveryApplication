@using FoodDelivery.Domain.Domain
@model FoodDelivery.Domain.Domain.Restaurant

@{
    var isFavorite = ViewBag.IsFavorite as bool?;
    var isFavoriteValue = isFavorite ?? false;
    ViewData["Title"] = "Details";
}

<style>
    body {
        background-color: #f8f9fa;
    }

    h1 {
        color: #89A8B2;
        font-weight: bold;
    }

    p {
        font-size: 1rem;
        color: #333;
    }

    hr {
        border-color: #B3C8CF;
    }

    .btn-outline-primary {
        border-color: #89A8B2;
        color: #89A8B2;
    }

        .btn-outline-primary:hover {
            background-color: #B3C8CF;
            color: #F1F0E8;
        }

    .btn-success {
        background-color: #89A8B2;
        color: #F1F0E8;
        border: none;
    }

        .btn-success:hover {
            background-color: #B3C8CF;
            color: #F1F0E8;
        }

    .btn-warning {
        background-color: #E5E1DA;
        color: #333;
    }

        .btn-warning:hover {
            background-color: #B3C8CF;
            color: #F1F0E8;
        }

    .card {
        border: 1px solid #B3C8CF;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        overflow: hidden;
    }

    .card-img-top {
        height: 200px;
        object-fit: cover;
    }

    .card-title {
        color: #89A8B2;
        font-weight: bold;
    }

    .card-text {
        font-size: 0.9rem;
        color: #6c757d;
    }

    .text-success {
        color: #89A8B2 !important;
    }

    .btn-outline-danger {
        border-color: #E5E1DA;
        color: #E5E1DA;
    }

        .btn-outline-danger:hover {
            background-color: #B3C8CF;
            color: #F1F0E8;
        }

    .btn-outline-success {
        border-color: #B3C8CF;
        color: #B3C8CF;
    }

        .btn-outline-success:hover {
            background-color: #89A8B2;
            color: #F1F0E8;
        }

    h4 {
        color: #89A8B2;
        font-weight: bold;
        text-transform: uppercase;
    }
</style>

<div class="container my-5">
    <div class="row align-items-center">
        <div class="col-md-8">
            <h1>@Model.Name</h1>
            <p><strong>Location:</strong> @Model.Location</p>
            <p><strong>Available:</strong> @(Model.IsAvailable.Value ? "Yes" : "No")</p>
        </div>
        <div class="col-md-4 text-end">
            <button class="btn btn-outline-primary mb-2" type="button">
                Delivery Time: @Model.DeliveryTime
            </button>
            <button class="btn btn-outline-primary mb-2" type="button">
                Rating: @Model.Rating
            </button>
        </div>
    </div>

    <hr />

    @if (ViewBag.IsOwner != null && (bool)ViewBag.IsOwner)
    {
        <div class="mb-4">
            <a class="btn btn-secondary me-2" asp-controller="Restaurants" asp-action="CreateMenu" asp-route-id="@Model.Id">Create Menu</a>
            <a class="btn btn-secondary" asp-controller="Restaurants" asp-action="Edit" asp-route-id="@Model.Id">Edit Details</a>
        </div>
    }

    <section>
        <h4>Menu</h4>
        <div class="row">
            @if (Model.Menu != null && Model.Menu.Any())
            {
                var groupedMenu = Model.Menu.GroupBy(m => m.FoodCategory.Name);
                @foreach (var group in groupedMenu)
                {
                    <div class="col-12">
                        <h5 class="mt-3">@group.Key</h5>
                        <hr />
                    </div>

                    @foreach (var item in group)
                    {
                        <div class="col-md-4 mb-4">
                            <div class="card">
                                <img class="card-img-top" src="@item.Image" alt="@item.Name" />
                                <div class="card-body">
                                    <h5 class="card-title">@item.Name</h5>
                                    <p class="card-text">@item.Description</p>
                                    <h6 class="text-success">Price: @item.Price</h6>
                                    @if (ViewBag.IsRegularUser != null && (bool)ViewBag.IsRegularUser)
                                    {
                                    <div class="input-group my-3">
                                        <button class="btn btn-outline-danger" type="button" onclick="decreaseQuantity('@item.Id', @item.Price)">-</button>
                                        <input type="text" class="form-control text-center" value="1" id="quantity-@item.Id" readonly />
                                        <button class="btn btn-outline-success" type="button" onclick="increaseQuantity('@item.Id', @item.Price)">+</button>
                                    </div>
                                    
                                        <form method="post" asp-controller="Foods" asp-action="AddToWishlist" asp-route-id="@item.Id">
                                            <input type="hidden" name="quantity" id="hidden-quantity-@item.Id" value="1" />

                                            <button type="submit" class="btn btn-info w-100" style="background-color: #B3C8CF !important;">Add to Wishlist</button>

                                        </form>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                }
            }
            else
            {
                <div class="col-12">
                    <p>No items in the menu.</p>
                </div>
            }
        </div>
    </section>

    <div class="mt-4">
        <a class="btn btn-secondary me-2" asp-action="Edit" asp-route-id="@Model?.Id">Edit</a>
        <a class="btn btn-secondary" asp-action="Index">Back to List</a>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>

    function decreaseQuantity(foodId, foodPrice) {
        var quantityInput = document.getElementById('quantity-' + foodId);
        var hiddenQuantityInput = document.getElementById('hidden-quantity-' + foodId);
        if (quantityInput && parseInt(quantityInput.value) > 1) {
            quantityInput.value = parseInt(quantityInput.value) - 1;
            hiddenQuantityInput.value = quantityInput.value;
        }
    }

    function increaseQuantity(foodId, foodPrice) {
        var quantityInput = document.getElementById('quantity-' + foodId);
        var hiddenQuantityInput = document.getElementById('hidden-quantity-' + foodId);
        if (quantityInput) {
            quantityInput.value = parseInt(quantityInput.value) + 1;
            hiddenQuantityInput.value = quantityInput.value;
        }
    }

        document.getElementById('favorite-button').addEventListener('click', function (event) {
        event.preventDefault();

        const form = document.getElementById('favorites-form');
        fetch(form.action, {
            method: 'POST',
            body: new FormData(form),
        })
        .then(response => {
            if (response.ok) {
                // Toggle the button state
                const button = document.getElementById('favorite-button');
                const isFavorite = button.classList.contains('btn-info');
                button.classList.toggle('btn-info', !isFavorite);
                button.classList.toggle('btn-warning', isFavorite);
                button.textContent = isFavorite ? 'Add to Favorites' : 'Favorite';
            }
        });
    });
</script>
