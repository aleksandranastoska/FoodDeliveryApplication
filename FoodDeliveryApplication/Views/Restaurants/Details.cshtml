@using FoodDelivery.Domain.Domain
@model FoodDelivery.Domain.Domain.Restaurant

@{
    var isFavorite = ViewBag.IsFavorite as bool?;
    var isFavoriteValue = isFavorite ?? false;
}

@{
    ViewData["Title"] = "Details";
}

<div class="container">
    <div class="container">
        <div class="container">
            <div class="row d-flex align-items-md-end">
                <div class="col-md-8">
                    <div class="container">
                        <h1 class="text-black">@Model.Name</h1>
                    
                    <div>
                        <p>@Model.IsAvailable.Value</p>
                    </div>
                    <a class="text-black mb-1 mt-1 fs-20">
                        @Model.Location
                    </a>
                </div>
                </div>
                <div class="col-md-4">
                    <div class="text-right">
                        <button class="btn btn-warning m-lg-2 plxs-0" type="button">@Model.DeliveryTime</button>
                        <button class="btn btn-warning m-lg-2 plxs-0" type="button">@Model.Rating</button>
                        <a id="favorite-button"
                           data-restaurant-id="@Model.Id"
                           class="btn @(isFavoriteValue ? "btn-success" : "btn-warning") ml-2"
                           href="javascript:void(0);">
                            @(isFavoriteValue ? "Favorite" : "Add to Favorites")
                        </a>

                        <button class="btn btn-warning text-white m-lg-2">Info</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<section>
    <div class="container">
        <p class="text-black">@Model.Menu.Count</p>
    </div>
</section>

@if (@Model.Owner.Role == FoodDelivery.Domain.Enumerations.UserRole.OWNER)
{
    <li class="nav-item">
        <a class="nav-link" asp-controller="Restaurants" asp-action="CreateMenu" asp-route-id="@Model.Id">Create Menu</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" asp-controller="Restaurants" asp-action="Edit" asp-route-id="@Model.Id">Edit Details</a>
    </li>
}

<section>
    <div class="container">
        <h4>Menu</h4>
        <hr />
        @if (Model.Menu != null && Model.Menu.Any())
        {
            var groupedMenu = Model.Menu.GroupBy(m => m.FoodCategory.Name);

            @foreach (var group in groupedMenu)
            {
                <h5>@group.Key</h5>
                <ul class="list-group">
                    @foreach (var item in group)
                    {
                        <div class="card" style="width: 18rem; height: 35rem">
                            <img class="card-img-top" src="@item.Image" alt="Card image cap">
                            <div class="card-body">
                                <h5 class="card-title">@item.Name</h5>
                                <p class="card-text">@item.Description</p>
                                <h6>Price: @item.Price</h6>

                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <button class="btn btn-outline-secondary" type="button" onclick="decreaseQuantity('@item.Id', @item.Price)">-</button>
                                    </div>
                                    <input type="text" class="form-control text-center" value="1" id="quantity-@item.Id" readonly>
                                    <div class="input-group-append">
                                        <button class="btn btn-outline-secondary" type="button" onclick="increaseQuantity('@item.Id', @item.Price)">+</button>
                                    </div>
                                </div>
                            </div>
                            <div class="card-footer">
                                <form method="post" asp-controller="Foods" asp-action="AddToWishlist" asp-route-id="@item.Id">
                                    <input type="hidden" name="quantity" id="hidden-quantity-@item.Id" value="1" />
                                    <button type="submit" class="btn btn-info">Add to Wishlist</button>
                                </form>
                            </div>

                        </div>
                    }
                </ul>
            }
        }
        else
        {
            <p>No items in the menu.</p>
        }
    </div>
</section>

<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $('#favorite-button').click(function (event) {
            event.preventDefault(); 

            var restaurantId = $(this).data('restaurant-id');
            var token = $('input[name="__RequestVerificationToken"]').val();  

            $.ajax({
                url: '@Url.Action("AddToFavorites", "Profile")',
                type: 'POST',
                data: {
                    restaurantId: restaurantId,
                    __RequestVerificationToken: token
                },
                success: function () {
                    $('#favorite-button').text('Favorited').removeClass('btn-warning').addClass('btn-success');
                },
                error: function () {
                    alert('Failed to add to favorites');
                }
            });
        });
        $('.add-to-wishlist').click(function (event) {
            event.preventDefault(); 

            var foodId = $(this).data('food-id');
            var button = $(this);
            var token = $('input[name="__RequestVerificationToken"]').val();

            $.ajax({
                url: '/Foods/AddToWishlist/' + foodId,  
                type: 'POST',
                headers: {
                    'X-CSRF-TOKEN': token
                },
                success: function () {
                    button.text('Added to Wishlist').removeClass('btn-info').addClass('btn-success');
                },
                error: function () {
                    alert('Failed to add to wishlist');
                }
            });
        });
    });

    function decreaseQuantity(foodId, foodPrice) {
        var quantityInput = document.getElementById('quantity-' + foodId);
        var hiddenQuantityInput = document.getElementById('hidden-quantity-' + foodId);
        if (quantityInput) {
            var currentQuantity = parseInt(quantityInput.value);
            if (currentQuantity > 1) {
                quantityInput.value = currentQuantity - 1;
                hiddenQuantityInput.value = currentQuantity - 1;
            }
        } else {
            console.error('Quantity input element not found for ID:', foodId);
        }
    }

    function increaseQuantity(foodId, foodPrice) {
        var quantityInput = document.getElementById('quantity-' + foodId);
        var hiddenQuantityInput = document.getElementById('hidden-quantity-' + foodId);
        if (quantityInput) {
            var currentQuantity = parseInt(quantityInput.value);
            quantityInput.value = currentQuantity + 1;
            hiddenQuantityInput.value = currentQuantity + 1;
        } else {
            console.error('Quantity input element not found for ID:', foodId);
        }
    }
</script>
